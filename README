NAME
     uncsv — (un‐)escape/(un‐)quote to and from a CSV stream

SYNOPSIS
     uncsv [−hV] [−d delimiter] [file ...]
     csv [−hV] [−d delimiter] [file ...]

DESCRIPTION
     uncsv is a filter command converting the lines of a CSV file into non‐
     escaped, non‐quoted delimited file (pipe by default). This program will
     error out if it encounters a character matching the delimiter, it will
     also replace all the carriage return and new‐line characters by spaces;
     assuming you are planning on using ordinary UNIX tools with the output,
     this is what you want.

     csv is the opposite of this command. It takes an unquoted stream of val‐
     ues, separated by the delimiter of your choice (default: pipe ’|’) and
     produces a "standard" CSV file.

     Both tools avoid end‐of‐line character politics and will leave these
     untouched, if your file comes with both carriage returns and new‐line
     characters (\r\n a.k.a. CRLF), uncsv will leave them as‐is.

     The options are as follows:

     −d delimiter
	     Specify the output delimiter for uncsv and the input delimiter
	     for csv , defaults to the pipe character ’|’. If the delimiter is
	     found in the input data, both programs interrupt.

     −V      Print version.

     −h      Print usage.

EXAMPLES
      # Print the second field of a CSV:
      uncsv file.csv | awk ‐F\| ’{ print $2 }’

      # Convert a CSV to un‐quoted tab‐delimited format:
      uncsv ‐d’\t’ < file.csv > delimited

      # Convert a PostgreSQL output to CSV:
      $ psql yourdb
      psql> \f\a
      psql> \o | csv > /tmp/output.csv
      psql> select * from candies;
      psql> \o

SEE ALSO
     awk(1), cut(1)

AUTHORS
     uncsv was written by Bertrand Janin <b@janin.com> and is distributed
     under an ISC license (BSD compatible, OSI compatible).

